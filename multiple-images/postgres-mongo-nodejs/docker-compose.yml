version: "3"

services:
  postgres:
    image: postgres
    container_name: postgres-docker
    environment: 
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    volumes:
      - ./.volume_databases/postgres:/var/lib/postgresql/data
      - ./dump:/backup
      - ./init-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./init-postgres/init.sh:/docker-entrypoint-initdb.d/init.sh
    ports:
      - 5432:5432
    networks:
      - example-network
  mongo:
    image: mongo
    container_name: mongo-docker
    volumes:
      - ./init-mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./.mongo_volume/:/data/db
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=mydatabase
    networks:
      - example-network
  node:
    image: node
    container_name: nodejs-docker
    env_file: ./yourproject/.env
    ports:
      - "3333:3333"
    working_dir: "/home/yourproject/node/app"
    volumes:
      - ./yourproject/:/home/yourproject/node/app
    networks:
      - example-network
    command: "yarn start"

networks: 
  example-network:
    driver: bridge
